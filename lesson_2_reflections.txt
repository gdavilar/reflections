What happens when you initialize a repository? Why do you need to do it?
This creates a hidden folder called .git
This allows git to do version control on the files in the repository (directory)

How is the staging area differet from the working directory and the repository?
What value do you think it offers?
It is where recently changed files are placed, prior to them being commited.
This is good because it allows you to control what files are commited.

How can you use the staging area to make sure you have one commit per logical change?
The staging area allows me to see what files have changed and ensure I am only pushing the files I want to.

What are some situations when branches would be helpful in keeping your history organized?
How would branches help?
Using branches would allow me to create different versions of the program, without affecting the 
original master version.

how do the diagrams help you visualize the branch structure?
It helps visualize the layout the history and to know what can be reached back to.

What is the result of merging two branches together?
Why do we represent it in the diagram the way we do?
It comboines the work from two branches into one branch.  We do it this way because it keeps all of the history
of the previous changes from both branches.

What are the pros and cons of Git's automatic mergiving vs always doing merges manually?
It saves time and headache from doing it manually, but sometimes the automatic merge misses 
easy fixes to conflicts